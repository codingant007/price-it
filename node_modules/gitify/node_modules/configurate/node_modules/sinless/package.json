{
  "name": "sinless",
  "version": "0.1.0",
  "description": "Adapts sync functions to expose async api and leaves async functions unchanged..",
  "main": "index.js",
  "scripts": {
    "test-main": "tap test/*.js",
    "test-0.8": "nave use 0.8 npm run test-main",
    "test-0.10": "nave use 0.10 npm run test-main",
    "test-all": "npm run test-main && npm run test-0.8 && npm run test-0.10",
    "test": "if [ -e $TRAVIS ]; then npm run test-all; else npm run test-main; fi"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/thlorenz/sinless.git"
  },
  "homepage": "https://github.com/thlorenz/sinless",
  "dependencies": {
    "setimmediate": "~1.0.1"
  },
  "devDependencies": {
    "nave": "~0.4.3",
    "tape": "~1.0.4",
    "tap": "~0.4.3"
  },
  "keywords": [
    "sync",
    "async",
    "callback",
    "return",
    "wrap",
    "adapt",
    "convert"
  ],
  "author": {
    "name": "Thorsten Lorenz",
    "email": "thlorenz@gmx.de",
    "url": "http://thlorenz.com"
  },
  "license": {
    "type": "MIT",
    "url": "https://github.com/thlorenz/sinless/blob/master/LICENSE"
  },
  "engine": {
    "node": ">=0.6"
  },
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/8..latest",
      "firefox/17..latest",
      "firefox/nightly",
      "chrome/22..latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "readme": "# sinless [![build status](https://secure.travis-ci.org/thlorenz/sinless.png)](http://travis-ci.org/thlorenz/sinless)\n\n[![testling badge](https://ci.testling.com/thlorenz/sinless.png)](https://ci.testling.com/thlorenz/sinless)\n\n**sinless** [ˈsɪnlɪs]\n*free from sin or guilt; innocent; pure*\n\nAdapts sync functions to expose async api and leaves async functions unchanged.\n\n```js\nvar sinless = require('sinless')\n\nfunction syncAdd (a, b) {\n  return a + b;\n}\n\n// fn takes 3 args if it is async and has a callback \nvar sinlessAdd = sinless(syncAdd, 3); \nsinlessAdd(1, 3, function (err, res) {\n  if (err) return console.error('err', err);\n  console.log('res', res);\n})\n\n// res: 4\n```\n\n```js\n// although it makes deducing fn's asynchronousity more solid, supplying number of args is optional\n// Therefore the below also works assuming that syncAdd's number of arguments is constant\nvar sinlessAdd = sinless(syncAdd); \n```\n\n## Installation\n\n    npm install sinless\n\n## Features\n\n- consume identical API while giving function implementers the option to return synchronously or callback asynchronously [see\n  example](https://github.com/thlorenz/sinless/blob/master/examples/unified-api.js)\n- **does not make sync calls async**, i.e. `fs.readFileSync` will still block\n\n## API\n\n### *sinlessAdd(fn, lenWithCb)*\n\n```\n/**\n  * Returns an async version of a given function or the function itself if it could be determined to be async already.\n  * If lenWithCb is given, the function will be wrapped if the number of its arguments are smaller than this length.\n  * If lenWithCb is not given the function will be wrapped whenever it is called with more arguments than it takes. \n  *\n  * @name sinless\n  * @function\n  * @param fn {Function} to be wrapped if it isn't async\n  * @param lenWithCb {Number} [optional] number of arguments the function should have if it was async and included a callback\n  * @return {Function} either the original function or a wrapped version of it\n  */\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/thlorenz/sinless/issues"
  },
  "_id": "sinless@0.1.0",
  "dist": {
    "shasum": "569f3c951fd0278b0c0e3ac196c4c18d02955ccb",
    "tarball": "http://registry.npmjs.org/sinless/-/sinless-0.1.0.tgz"
  },
  "_from": "sinless@~0.1.0",
  "_npmVersion": "1.2.32",
  "_npmUser": {
    "name": "thlorenz",
    "email": "thlorenz@gmx.de"
  },
  "maintainers": [
    {
      "name": "thlorenz",
      "email": "thlorenz@gmx.de"
    }
  ],
  "directories": {},
  "_shasum": "569f3c951fd0278b0c0e3ac196c4c18d02955ccb",
  "_resolved": "http://registry.npmjs.org/sinless/-/sinless-0.1.0.tgz"
}
